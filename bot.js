// bot.js
const axios = require('axios');
const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();

// –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç BotFather
const token = process.env.TELEGRAM_BOT_TOKEN;
const BEK_URL = process.env.BEKURL;
const bot = new TelegramBot(token, { polling: true });

function getPlaceByCoords(lat, lon) {
    var url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&zoom=18&addressdetails=1`;

    fetch(url)
        .then(response => response.json())
        .then(data => {
            if (data && data.address) {
                var placeName = data.display_name;

                var addressParts = placeName.split(',');

                return addressParts.slice(0, addressParts.length - 3).join(', ').trim();
            } else {
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∞–¥—Ä–µ—Å.');
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—Ç–Ω–æ–º –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
        });
}

// –ù–∞—á–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
const languageKeyboard = {
    reply_markup: {
        keyboard: [
            [
                { text: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π' },
                { text: 'üá∫üáø –£–∑–±–µ–∫—Å–∫–∏–π' }
            ]
        ],
        resize_keyboard: true,
        one_time_keyboard: true
    }
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
const russianKeyboard = {
    reply_markup: {
        keyboard: [
            [{ text: 'üõç –ö–∞—Ç–∞–ª–æ–≥' }],
            [{ text: '–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫' }]
        ],
        resize_keyboard: true,
        one_time_keyboard: true
    }
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–∑–±–µ–∫—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
const uzbekKeyboard = {
    reply_markup: {
        keyboard: [
            [{ text: `üõç Katalog` }],
            [{ text: `Tilni o'zgartirish` }]
        ],
        resize_keyboard: true,
        one_time_keyboard: true
    }
};

const webAppRussianKeyboard = {
    reply_markup: {
        inline_keyboard: [
            [
                {
                    text: '–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ üõí',
                    web_app: { url: 'https://wangabletech.netlify.app' } // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                }
            ]
        ]
    }
};

const webAppUzbekKeyboard = {
    reply_markup: {
        inline_keyboard: [
            [
                {
                    text: 'Katalogni ochish üõí',
                    web_app: { url: 'https://wangabletech.netlify.app' } // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                }
            ]
        ]
    }
}

const startBot = () => {
    // –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
    bot.onText(/\/start/, (msg) => {
        const chatId = msg.chat.id;
        bot.sendMessage(chatId, 'üëã –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.', languageKeyboard);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    bot.on('message', (msg) => {
        const chatId = msg.chat.id;
        const text = msg.text;

        if (text === 'üá∑üá∫ –†—É—Å—Å–∫–∏–π') {
            bot.sendMessage(chatId, '–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "üõç –ö–∞—Ç–∞–ª–æ–≥".', russianKeyboard);
        } else if (text === 'üá∫üáø –£–∑–±–µ–∫—Å–∫–∏–π') {
            bot.sendMessage(chatId, `Tovarlar bilan tanishish va xarid qilish uchun "üõç Katalog" bo'limiga o'ting.`, uzbekKeyboard);
        } else if (text === '–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫') {
            // –í–µ—Ä–Ω–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–∞ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ
            bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:', languageKeyboard);
        } else if (text === `Tilni o'zgartirish`) {
            // –í–µ—Ä–Ω–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–∞ –¥–ª—è —É–∑–±–µ–∫—Å–∫–æ–≥–æ
            bot.sendMessage(chatId, 'Tilni tanlang:', languageKeyboard);
        } else if (text === "üõç –ö–∞—Ç–∞–ª–æ–≥") {
            bot.sendMessage(chatId, '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä —Ç–æ–≤–∞—Ä–æ–≤! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–∫–∞–∑–∞—Ç—å¬ª ‚¨áÔ∏è –∏ –Ω–∞—á–Ω–∏—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å —Å–≤–æ–∏ –ø–æ–∫—É–ø–∫–∏ –≤ —É–¥–æ–±–Ω–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ.', webAppRussianKeyboard);
        } else if (text === "üõç Katalog") {
            bot.sendMessage(chatId, 'Tovarlar dunyosini kashf eting! ‚ÄúBuyurtma berish‚Äù tugmasini ‚¨áÔ∏è bosing va qulay katalogda xaridlaringizni tanlashni boshlang.', webAppUzbekKeyboard);
        }
    })

    bot.on('callback_query', (callbackQuery) => {
        const msg = callbackQuery.message;
        const chatId = callbackQuery.message.chat.id;
        const callbackData = callbackQuery.data;

        if (callbackData === 'menu') {
            bot.sendMessage(chatId, '–ú–µ–Ω—é:', dropdownMenu);
        } else if (callbackData === 'start') {
            bot.sendMessage(chatId, '–ö–æ–º–∞–Ω–¥–∞ /start –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞.');
        } else if (callbackData === 'help') {
            bot.sendMessage(chatId, '–ö–æ–º–∞–Ω–¥–∞ /help –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞.');
        } else if (callbackData.startsWith('change_location:')) {
            const orderNumber = callbackData.split(':')[1];

            const locationKeyboard = {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "üìç –í—ã–±—Ä–∞—Ç—å –º–µ—Å—Ç–æ –Ω–∞ –∫–∞—Ä—Ç–µ",
                                web_app: {
                                    url: `https://your-web-app-url.com?orderNumber=${orderNumber}`  // –ü–µ—Ä–µ–¥–∞–µ–º orderNumber –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                                }
                            }
                        ]
                    ]
                }
            };

            bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ:', locationKeyboard);
        } else if (callbackData.startsWith('cancel_order:')) {
            const orderNumber = callbackData.split(':')[1];
            axios.delete(`${BEK_URL}/api/v1/order/${orderNumber}`, {
                data: {
                    secretkey: process.env.SECRET_KEY
                }
            }).then(res => {
                if (res.status === 200) {
                    bot.sendMessage(chatId, `üì¶ –ó–∞–∫–∞–∑ –ø–æ –Ω–æ–º–µ—Ä—É: ${orderNumber} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω.`);
                } else {
                    bot.sendMessage(chatId, `‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ –Ω–æ–º–µ—Ä—É: ${orderNumber}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`);
                }
            }).catch(err => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞:', err);
                if (err.response && err.response.status === 404) {
                    bot.sendMessage(chatId, `‚ùå –ó–∞–∫–∞–∑ —Å –Ω–æ–º–µ—Ä–æ–º ${orderNumber} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
                } else if (err.response && err.response.status === 500) {
                    bot.sendMessage(chatId, `üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`);
                } else {
                    bot.sendMessage(chatId, '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
                }
            });
        }
        bot.answerCallbackQuery(callbackQuery.id);
    });
    bot.on('location', async (msg) => {
        const { latitude, longitude } = msg.location;
        const placeName = await getPlaceByCoords(latitude, longitude);
        bot.sendMessage(msg.chat.id, `–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–µ—Å—Ç–æ: ${placeName}, ${latitude}, ${longitude}`);
    });
};

module.exports = { startBot, bot };